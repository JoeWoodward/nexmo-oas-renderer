<%
  # @mheap: This is hacky handling for allOf, but it works for now
  allOf = schema['allOf']
  if allOf
    schema = allOf.reduce { |a,b| a.deep_merge(b) }
  end
%>

<%
  # If it's an array, look at the items for the response schema as all items within
  # the array are expected to be identical
  schema = schema['items'] if schema['type'] == 'array'
%>

<% if schema['properties'] %>
  <%
    depth = 0 unless depth
    parent_path = "" unless parent_path
    parent_path += "." if parent_path.length.positive?
  %>
  <% schema['properties'].each do |key, value| %>
    <% current_path = "#{parent_path}#{key}" %>
    <%
      next if key == '_links'
      next if value['x-skip-response-description']
      deep_link = "#{endpoint.method}_#{endpoint.path.path.gsub("/", "_")[1..-1]}" unless deep_link
      responseFieldId = deep_link + "_" + key
    %>

    <tr id="<%= responseFieldId %>" <% if value['properties'] %> class=" Vlt-table__row--noline" <% end %>>
      <td>
      <!-- <td style="padding-left: <%= (8+(20*depth)) %>px"> -->
        <span class="Vlt-dark-grey"><%= parent_path %></span><b><%= key %></b>
        <% if value['items'] %>
          <br />
          <small>array of <%= value['items']['type'] %>s</small>
        <% else %>
          <br />
          <small>
            <i><%= value['type'] %></i>
          </small>
        <% end %>
      </td>
      <td>
        <%= value['description'] ? value['description'].render_markdown : '' %>
        <% if value['enum']%>
          <small class="Vlt-grey-dark">
            One of: <%= parameter_values(value['enum']) %>
          </small>
        <% end %>


        <% if value['items'] # If this is an array, we need to show the structure of the children %>

          <% if value['items']['oneOf'] || value['items']['anyOf'] # If it's a oneOf/anyOf, we need tabs! %>
            <%

              if value['items']['oneOf']
                qualifier = 'one'
                key = 'oneOf'
              else
                qualifier = 'any'
                key = 'anyOf'
              end

              schemas = value['items'][key].map do |item|
                if item['allOf']
                  item = item.deep_merge(item['allOf'].reduce { |a,b| a.deep_merge(b) })
                  item.delete('allOf')
                end
                item
              end
            %>
          <% else %>
            <% value['properties'] = value['items']['properties'] %>
            <% schemas = [value] %>
          <% end %>

        <% else %>
          <% schemas = [value] if value['properties'] %>
        <% end %>

        <% if schemas %>
          <% needs_tabs = schemas.size > 1 %>
          <% if needs_tabs %>
            </td></tr>
            <tr><td colspan="2">

            <div class="Vlt-callout Vlt-callout--shoutout">
              <i></i>
              <div class="Vlt-callout__content">
                This array contains <strong><%= qualifier %></strong> of the following objects:
              </div>
            </div>
            <div class="Vlt-tabs js-format">
              <div class="Vlt-tabs__header" role="tablist" aria-label="Responses">
                <% schemas.each_with_index do |schema, index| %>
                  <div class="Vlt-tabs__link <%= index == 0 ? 'Vlt-tabs__link_active' : '' %>">
                    <%= schema['description'] %>
                  </div>
                <% end %>
              </div>
              <div class="Vlt-tabs__content">
          <% end %>

          <% schemas.each_with_index do |value, index| %>
            <% if needs_tabs %>
              <div class="Vlt-tabs__panel <%= index == 0 ? 'Vlt-tabs__panel_active' : '' %>">
              <table>
            <% end %>
            <%= erb :'open_api/_response_description_parameters', locals: { endpoint: endpoint, schema: value, deep_link: responseFieldId, parent_path: current_path, depth: (depth+1)} %>
            <% if needs_tabs %>
            </table>
              </div>
            <% end %>

          <% end %>

          <% if needs_tabs %>
            </div>
            </div>
            </td>
            </tr>
          <% end %>
        <% end %>
  <% end %>
<% end %>
